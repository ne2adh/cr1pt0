{"version":3,"sources":["SimetricoForm.js","ASimetricoForm.js","App.js","reportWebVitals.js","index.js"],"names":["crypto","require","algorithm","SECRET_KEY","ENCRYPTION_KEY","SimetricoForm","props","state","clave_secreta","clave_secreta1","mensaje","texto_encriptado_result","texto_encriptado","texto_descifrado","handleChangeClaveSecreta","bind","handleChangeClaveSecreta1","handleChangeTextoCifrado","handleChangeTextoDescifrado","handleSubmit","handleSubmit2","event","this","setState","target","value","length","Buffer","from","toString","a","text","iv","randomBytes","cipher","createCipheriv","encrypted","update","concat","final","encrypt","console","log","error","alert","preventDefault","b","textParts","split","shift","encryptedText","join","decipher","createDecipheriv","decrypted","decrypt","trim","style","display","flexDirection","onSubmit","alignItems","padding","type","onChange","width","marginLeft","fontSize","rows","cols","React","Component","ASimetricoForm","texto","clave_publica","clave_privada","handleChangeTexto","NodeRSA","key","ImportFromFileBodyPublicComponent","fileReader","handleFileRead","e","content","result","id","accept","file","files","FileReader","onloadend","readAsText","ImportFromFileBodyPrivateComponent","marginBottom","textAlign","readOnly","color","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7aa4e385.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n /* ALGORITMO EXTRAIDO DE:  https://github.com/zishon89us/node-cheat.git */\r\nconst crypto = require('crypto');\r\nconst algorithm = 'aes-256-cbc';\r\nlet SECRET_KEY = '';\r\nlet ENCRYPTION_KEY = '';\r\nconst IV_LENGTH = 16;\r\n\r\nfunction encrypt(text) {\r\n    let iv = crypto.randomBytes(IV_LENGTH);\r\n    let cipher = crypto.createCipheriv(algorithm, Buffer.from(ENCRYPTION_KEY, 'hex'), iv);\r\n    let encrypted = cipher.update(text);\r\n    encrypted = Buffer.concat([encrypted, cipher.final()]);\r\n    return iv.toString('hex') + ':' + encrypted.toString('hex');\r\n}\r\n  \r\nfunction decrypt(text) {\r\n    let textParts = text.split(':');\r\n    let iv = Buffer.from(textParts.shift(), 'hex');\r\n    let encryptedText = Buffer.from(textParts.join(':'), 'hex');\r\n    let decipher = crypto.createDecipheriv(algorithm, Buffer.from(ENCRYPTION_KEY, 'hex'), iv);\r\n    let decrypted = decipher.update(encryptedText);\r\n    decrypted = Buffer.concat([decrypted, decipher.final()]);\r\n    return decrypted.toString();\r\n}\r\n\r\nclass SimetricoForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          clave_secreta: 'EJEMPLO DE CIFRADO SIMETRICO AES',\r\n          clave_secreta1: 'EJEMPLO DE CIFRADO SIMETRICO AES',\r\n          mensaje: 'HOLA MUNDO',\r\n          texto_encriptado_result: '',\r\n          texto_encriptado: '',\r\n          texto_descifrado: '',\r\n        };\r\n  \r\n      this.handleChangeClaveSecreta = this.handleChangeClaveSecreta.bind(this);\r\n      this.handleChangeClaveSecreta1 = this.handleChangeClaveSecreta1.bind(this);\r\n      this.handleChangeTextoCifrado = this.handleChangeTextoCifrado.bind(this);\r\n      this.handleChangeTextoDescifrado = this.handleChangeTextoDescifrado.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      this.handleSubmit2 = this.handleSubmit2.bind(this);\r\n    }\r\n  \r\n    handleChangeClaveSecreta(event) {\r\n      this.setState({clave_secreta: event.target.value});\r\n    }\r\n    handleChangeClaveSecreta1(event) {\r\n      this.setState({clave_secreta1: event.target.value});\r\n    }\r\n\r\n    handleChangeTextoCifrado(event) {\r\n      this.setState({mensaje: event.target.value});\r\n    }\r\n\r\n    handleChangeTextoDescifrado(event) {\r\n      this.setState({texto_encriptado: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) {        \r\n        if((this.state.clave_secreta.length === 32) && this.state.mensaje.length > 1){\r\n            try {              \r\n              SECRET_KEY = Buffer.from(this.state.clave_secreta).toString('base64');\r\n              ENCRYPTION_KEY = Buffer.from(SECRET_KEY, 'base64');\r\n              let a = encrypt(this.state.mensaje);\r\n              this.setState({ texto_encriptado_result: a});\r\n              console.log(a);     \r\n            } catch (error) {\r\n              alert(error);\r\n            }\r\n        }\r\n        else\r\n            alert('la palabra clave: ' + this.state.clave_secreta + ' debe tener, 32 caracteres, \\n y debe introducir un texto. ');\r\n        \r\n      event.preventDefault();\r\n    }\r\n\r\n    handleSubmit2(event) {        \r\n      if((this.state.clave_secreta1.length === 32) && this.state.texto_encriptado.length > 1){\r\n        try {\r\n          SECRET_KEY = Buffer.from(this.state.clave_secreta1).toString('base64');\r\n          ENCRYPTION_KEY = Buffer.from(SECRET_KEY, 'base64');         \r\n          let b = decrypt(this.state.texto_encriptado.trim());\r\n          this.setState({texto_descifrado: b});\r\n          console.log(b);\r\n        } catch (error) {\r\n          alert(error);\r\n        }            \r\n      }\r\n      else\r\n      alert('la palabra clave: ' + this.state.clave_secreta1 + ' debe tener, 32 caracteres, \\n y debe introducir un texto. ');\r\n      \r\n      event.preventDefault();\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div style={{display: 'inline-block'}}>\r\n          <h1>CIFRADO / DESCIFRADO</h1>\r\n            <h4>Por el algoritmo AES (cifrado simetrico)</h4>\r\n          <div style={{display: 'flex', flexDirection: 'row'}}>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div style={{display: 'inline-block'}}>            \r\n              <div style={{display: 'flex', flexDirection: 'column', alignItems:'flex-start'}}>\r\n                  <div style={{padding: '8px' }}>\r\n                      <label>\r\n                          Palabra Clave:\r\n                          <input type=\"text\" value={this.state.clave_secreta} onChange={this.handleChangeClaveSecreta} style={{width: '280px', marginLeft: '8px'}} />\r\n                          <span style={{fontSize: '10px'}}> ( 256 bits, 32 caracteres)</span>\r\n                      </label>\r\n                  </div>\r\n                  <div style={{padding: '8px' }}>\r\n                      <label>\r\n                          Mensaje a cifrar:\r\n                          <textarea value={this.state.mensaje} onChange={this.handleChangeTextoCifrado} rows={5} cols={80} style={{marginLeft: '8px'}}/>\r\n                      </label>\r\n                      <br  />\r\n                      <span>\r\n                        Mensaje cifrado:<pre>{`${this.state.texto_encriptado_result.trim()}`}</pre>                      \r\n                      </span>\r\n                  </div>\r\n              </div>            \r\n                <input type=\"submit\" value=\"Cifrar\" />\r\n            </div>\r\n          </form>\r\n          <form onSubmit={this.handleSubmit2}>\r\n            <div style={{display: 'inline-block'}}>  \r\n                <div style={{display: 'flex', flexDirection: 'column', alignItems:'flex-start'}}>\r\n                  <div style={{padding: '8px' }}>\r\n                      <label>\r\n                          Palabra Clave:\r\n                          <input type=\"text\" value={this.state.clave_secreta1} onChange={this.handleChangeClaveSecreta1} style={{width: '280px', marginLeft: '8px'}} />\r\n                          <span style={{fontSize: '10px'}}> ( 256 bits, 32 caracteres)</span>\r\n                      </label>\r\n                  </div>\r\n                  <div style={{padding: '8px' }}>\r\n                      <label>\r\n                          Mensaje a descifrar:\r\n                          <textarea value={this.state.texto_encriptado} onChange={this.handleChangeTextoDescifrado} rows={5} cols={80} style={{marginLeft: '8px'}}/>\r\n                      </label>\r\n                      <br  />\r\n                      <span>\r\n                          Mensaje descifrado:<pre>{`${this.state.texto_descifrado} `}</pre>                      \r\n                      </span>\r\n                  </div>\r\n              </div>\r\n                <input type=\"submit\" value=\"Descifrar\" />\r\n            </div>\r\n          </form>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default SimetricoForm;","import React from 'react';\r\n\r\n /* ALGORITMO EXTRAIDO DE:  */\r\n//const crypto = require('crypto');\r\n/* const path = require('path')\r\nconst fs = require('fs')\r\n\r\nconst encrypt = (text, pkPath) => {\r\n  return new Promise((resolve, reject) => {\r\n    const absPkPath = path.resolve(pkPath)\r\n    fs.readFile(absPkPath, 'utf8', (err, pk) => {\r\n      if (err) {\r\n        return reject(err)\r\n      }\r\n\r\n      const buffer = Buffer.from(text, 'utf8')\r\n      const encrypted = crypto.publicEncrypt(pk, buffer)\r\n      resolve(encrypted.toString('base64'))\r\n    })\r\n  })\r\n}\r\n\r\nconst decrypt = (text, privateKeyPath, passphrase) => {\r\n  return new Promise((resolve, reject) => {\r\n    const p = path.resolve(privateKeyPath)\r\n    fs.readFile(p, 'utf8', (err, pk) => {\r\n      if (err) {\r\n        return reject(err)\r\n      }\r\n\r\n      const buffer = Buffer.from(text, 'base64')\r\n      const decrypted = crypto.privateDecrypt({\r\n        key: pk.toString(),\r\n        passphrase\r\n      }, buffer)\r\n\r\n      resolve(decrypted.toString('utf8'))\r\n    })\r\n  })\r\n} */\r\n\r\n\r\nclass ASimetricoForm extends React.Component {\r\n  \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          texto: 'HOLA MUNDO',\r\n          texto_encriptado: '',\r\n          texto_descifrado: '',\r\n          clave_publica: '',\r\n          clave_privada: '',\r\n        };\r\n  \r\n      this.handleChangeClaveSecreta = this.handleChangeClaveSecreta.bind(this);\r\n      this.handleChangeTexto = this.handleChangeTexto.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n  \r\n    handleChangeClaveSecreta(event) {\r\n      this.setState({clave_secreta: event.target.value});\r\n    }\r\n\r\n    handleChangeTexto(event) {\r\n      this.setState({texto: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) { \r\n      event.preventDefault();       \r\n        if((this.state.clave_publica.length > 0 ) && (this.state.clave_privada.length > 0 ) && (this.state.texto.length > 1)){         \r\n            \r\n          const NodeRSA = require('node-rsa');\r\n          const key = new NodeRSA(this.state.clave_publica);          \r\n          const text = this.state.texto;\r\n          const encrypted = key.encrypt(text, 'base64');\r\n          console.log('encrypted: ', encrypted);\r\n          this.setState({texto_encriptado: encrypted.toString('base64')});\r\n          const key1 = new NodeRSA(this.state.clave_privada);\r\n          const decrypted = key1.decrypt(encrypted, 'utf8');\r\n          this.setState({texto_descifrado: decrypted});\r\n          console.log('decrypted: ', decrypted.toString('utf8')); \r\n        }\r\n        else\r\n            alert('Se debe cargar tando la clave publica y privada (para los fines didacticos) \\n y debe introducir un texto. ');\r\n        \r\n      \r\n    }\r\n  \r\n    render() {\r\n      const ImportFromFileBodyPublicComponent = () => {\r\n        let fileReader;\r\n      \r\n        const handleFileRead = (e) => {\r\n            const content = fileReader.result;\r\n            this.setState({clave_publica: content});\r\n        };\r\n      \r\n        const handleFileChosen = (file) => {\r\n            fileReader = new FileReader();\r\n            fileReader.onloadend = handleFileRead;\r\n            fileReader.readAsText(file);\r\n        };\r\n      \r\n        return <div >\r\n                  <input type='file'\r\n                        id='file'\r\n                        accept='.pem'\r\n                        onChange={e => handleFileChosen(e.target.files[0])}\r\n                  />\r\n              </div>;\r\n      };\r\n      const ImportFromFileBodyPrivateComponent = () => {\r\n        let fileReader;\r\n      \r\n        const handleFileRead = (e) => {\r\n            const content = fileReader.result;\r\n            this.setState({clave_privada: content});\r\n        };\r\n      \r\n        const handleFileChosen = (file) => {\r\n            fileReader = new FileReader();\r\n            fileReader.onloadend = handleFileRead;\r\n            fileReader.readAsText(file);\r\n        };\r\n      \r\n        return <div >\r\n                  <input type='file'\r\n                        id='file'\r\n                        onChange={e => handleFileChosen(e.target.files[0])}\r\n                  />\r\n              </div>;\r\n      };\r\n\r\n      \r\n      return (\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div style={{display: 'inline-block'}}>\r\n            <h1>CIFRADO / DESCIFRADO</h1>\r\n            <h4>Por el algoritmo RSA (cifrado asimetrico)</h4>\r\n            <div style={{display: 'flex', flexDirection: 'column', alignItems:'flex-start'}}>\r\n                <div style={{padding: '8px', display: 'flex', flexDirection: 'column' }}>\r\n                    <div style={{marginBottom: '8px', textAlign: 'left'}}>\r\n                      <label>\r\n                          Clave publica:\r\n                      </label>\r\n                      <ImportFromFileBodyPublicComponent />\r\n                    </div>\r\n                    <div style={{width: '100px'}}>\r\n                      <textarea value={this.state.clave_publica} rows={8} cols={80} readOnly/>\r\n                    </div>\r\n                </div>                \r\n                <div style={{padding: '8px', display: 'flex', flexDirection: 'column' }}>\r\n                    <div style={{marginBottom: '8px', textAlign: 'left'}}>\r\n                      <label>\r\n                          Clave privada:\r\n                      </label>\r\n                      <ImportFromFileBodyPrivateComponent />\r\n                    </div>\r\n                    <div style={{width: '100px'}}>\r\n                      <textarea value={this.state.clave_privada} rows={8} cols={80} readOnly/>\r\n                    </div>\r\n                </div>                \r\n                <input type=\"submit\" value=\"Generar\" />\r\n                <div style={{padding: '8px' }}>\r\n                  <label>\r\n                      Texto a cifrar:\r\n                      <textarea value={this.state.texto} onChange={this.handleChangeTexto} rows={5} cols={80} style={{marginLeft: '8px'}}/>\r\n                  </label>\r\n                </div>\r\n                <div style={{padding: '8px', textAlign: 'left' }}>\r\n                    <span>\r\n                      Texto cifrado:\r\n                      <textarea value={this.state.texto_encriptado} rows={8} cols={80} readOnly/>\r\n                    </span><br />                              \r\n                    <span>\r\n                    Texto descifrado:\r\n                        <textarea style={{color: 'red'}} value={this.state.texto_descifrado} rows={8} cols={80} readOnly/>\r\n                    </span>\r\n                </div>\r\n            </div>            \r\n            </div>\r\n        </form>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default ASimetricoForm;","import './App.css';\nimport SimetricoForm from './SimetricoForm';\nimport ASimetricoForm from './ASimetricoForm';\n\nfunction App() {\n    return (\n    <div className=\"App\">\n      <header className=\"App-header\">        \n        <p>\n         Aplicacion realizada por Giancarlo Delgadillo Coca <span style={{fontSize: '14px', color: 'aqua'}}> (giancarlodcwork@gmail.com) </span>\n        </p>       \n      </header>\n      <SimetricoForm />\n      <ASimetricoForm />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}